from typing import Final
import os
from discord import Intents, Client, Message
from dotenv import load_dotenv
from responses import get_response

# Step 0: Load our token from somewhere safe (specially a .env file)
load_dotenv()
Token_bot: Final = os.getenv("BOT_TOKEN")

# Step 1: Bot setup
intents: Intents = Intents.default()
intents.message_content = True
client: Client = Client(intents=intents)

# Step 2: Message functionality
async def send_message(message: Message, user_message: str) -> None:
    if not user_message:
        print("(Message is empty)")
        return
    if is_private := user_message[0] == "?":
         user_message = user_message[1:]
    try:
        response: str = get_response(user_message)
        await message.author.send(response) if is_private else await message.channel.send(response)
    except Exception as e:
        print(e)

# Step 3: Handling the startup of our bot
@client.event
async def on_ready():
    # This part is only to be sure if the bot started correctly
    print("#any message".format(client))

# Step 4: Handling incoming messages
@client.event
async def on_message(message: Message) -> None:
    if message.author == client.user:
        return
    
    username: str = str(message.author)
    user_message: str = message.content
    channel: str = str(message.channel)

    print(f"{channel} {username}: {user_message}")
    await send_message(message, user_message)

# Step 5: Main entry point
def main() -> None:
    client.run(token=Token_bot)

if __name__ == "__main__":
    main()
